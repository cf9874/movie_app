{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","is","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movie","getMovies","a","axios","get","movies","data","console","log","setState","this","id","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAoCeA,MAhCf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,IAI7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,SAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAIL,UAAU,QAAd,SACGI,GADwBC,QAK/B,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,mBCiCOC,E,4MA/CbC,MAAQ,CACNC,WAAW,EACXC,MAAO,I,EAGTC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,yEALV,gBAGEC,EAHF,EAERC,KACEA,KAAQD,OAGZE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAAEJ,SAAQN,WAAW,IAPzB,2C,uDASZ,WACEW,KAAKT,c,oBAEP,WAAU,IAAD,EACuBS,KAAKZ,MAA3BC,EADD,EACCA,UAAWM,EADZ,EACYA,OACnB,OACE,yBAASf,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGe,EAAOZ,KAAI,SAACO,GACX,OACE,cAAC,EAAD,CAEEW,GAAIX,EAAMW,GACVzB,MAAOc,EAAMd,MACbD,KAAMe,EAAMf,KACZE,QAASa,EAAMb,QACfC,OAAQY,EAAMY,mBACdvB,OAAQW,EAAMX,QANTW,EAAMW,e,GA/BXE,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.34e1b82e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ is, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title}></img>\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        {/* <h3 className=\"movie_title\" style={{ backgroundColor: \"red\" }}>\r\n          {title}\r\n        </h3> */}\r\n        <h5 className=\"movie_year\">{year}</h5>\r\n        <ul className=\"genres\">\r\n          {genres.map((genre, index) => (\r\n            <li className=\"genre\" key={index}>\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie_summary\">{summary.slice(0, 140)}......</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movie: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n    console.log(movies);\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => {\n              return (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  year={movie.year}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              );\n            })}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}